{"version":3,"file":"testing-library-angular.mjs","sources":["../../../../projects/testing-library/src/lib/config.ts","../../../../projects/testing-library/src/lib/testing-library.ts","../../../../projects/testing-library/src/public_api.ts","../../../../projects/testing-library/testing-library-angular.ts"],"sourcesContent":["import { Config } from './models';\n\nlet config: Config = {\n  dom: {},\n  defaultImports: [],\n};\n\nexport function configure(newConfig: Partial<Config> | ((config: Partial<Config>) => Partial<Config>)) {\n  if (typeof newConfig === 'function') {\n    // Pass the existing config out to the provided function\n    // and accept a delta in return\n    newConfig = newConfig(config);\n  }\n\n  // Merge the incoming config delta\n  config = {\n    ...config,\n    ...newConfig,\n  };\n}\n\nexport function getConfig() {\n  return config;\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  Type,\n  NgZone,\n  SimpleChange,\n  OnChanges,\n  SimpleChanges,\n  ApplicationInitStatus,\n} from '@angular/core';\nimport { ComponentFixture, TestBed, tick } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\nimport { BrowserAnimationsModule, NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { RouterTestingModule } from '@angular/router/testing';\nimport {\n  getQueriesForElement as dtlGetQueriesForElement,\n  prettyDOM as dtlPrettyDOM,\n  waitFor as dtlWaitFor,\n  waitForElementToBeRemoved as dtlWaitForElementToBeRemoved,\n  screen as dtlScreen,\n  within as dtlWithin,\n  waitForOptions as dtlWaitForOptions,\n  configure as dtlConfigure,\n  queries as dtlQueries,\n} from '@testing-library/dom';\nimport type { Queries, BoundFunctions } from '@testing-library/dom';\nimport { RenderComponentOptions, RenderTemplateOptions, RenderResult } from './models';\nimport { getConfig } from './config';\n\nconst mountedFixtures = new Set<ComponentFixture<any>>();\nconst inject = TestBed.inject || TestBed.get;\n\nexport async function render<ComponentType>(\n  component: Type<ComponentType>,\n  renderOptions?: RenderComponentOptions<ComponentType>,\n): Promise<RenderResult<ComponentType, ComponentType>>;\nexport async function render<WrapperType = WrapperComponent>(\n  template: string,\n  renderOptions?: RenderTemplateOptions<WrapperType>,\n): Promise<RenderResult<WrapperType>>;\n\nexport async function render<SutType, WrapperType = SutType>(\n  sut: Type<SutType> | string,\n  renderOptions: RenderComponentOptions<SutType> | RenderTemplateOptions<WrapperType> = {},\n): Promise<RenderResult<SutType>> {\n  const { dom: domConfig, ...globalConfig } = getConfig();\n  const {\n    detectChanges: detectChangesOnRender = true,\n    declarations = [],\n    imports = [],\n    providers = [],\n    schemas = [],\n    queries,\n    wrapper = WrapperComponent as Type<WrapperType>,\n    componentProperties = {},\n    componentProviders = [],\n    excludeComponentDeclaration = false,\n    routes = [],\n    removeAngularAttributes = false,\n    defaultImports = [],\n  } = { ...globalConfig, ...renderOptions };\n\n  dtlConfigure({\n    eventWrapper: (cb) => {\n      const result = cb();\n      detectChangesForMountedFixtures();\n      return result;\n    },\n    ...domConfig,\n  });\n\n  TestBed.configureTestingModule({\n    declarations: addAutoDeclarations(sut, {\n      declarations,\n      excludeComponentDeclaration,\n      wrapper,\n    }),\n    imports: addAutoImports({\n      imports: imports.concat(defaultImports),\n      routes,\n    }),\n    providers: [...providers],\n    schemas: [...schemas],\n  });\n\n  await TestBed.compileComponents();\n\n  componentProviders\n    .reduce((acc, provider) => acc.concat(provider), [] as any[])\n    .forEach((p: any) => {\n      const { provide, ...provider } = p;\n      TestBed.overrideProvider(provide, provider);\n    });\n\n  const componentContainer = createComponentFixture(sut, wrapper);\n\n  let fixture: ComponentFixture<SutType>;\n  let detectChanges: () => void;\n\n  await renderFixture(componentProperties);\n\n  const rerender = async (rerenderedProperties: Partial<SutType>) => {\n    await renderFixture(rerenderedProperties);\n  };\n\n  const change = (changedProperties: Partial<SutType>) => {\n    const changes = getChangesObj(fixture.componentInstance, changedProperties);\n\n    setComponentProperties(fixture, { componentProperties: changedProperties });\n\n    if (hasOnChangesHook(fixture.componentInstance)) {\n      fixture.componentInstance.ngOnChanges(changes);\n    }\n\n    fixture.componentRef.injector.get(ChangeDetectorRef).detectChanges();\n  };\n\n  const zone = inject(NgZone);\n\n  const router = inject(Router);\n  if (typeof router?.initialNavigation === 'function') {\n    router?.initialNavigation();\n  }\n\n  const navigate = async (elementOrPath: Element | string, basePath = ''): Promise<boolean> => {\n    const href = typeof elementOrPath === 'string' ? elementOrPath : elementOrPath.getAttribute('href');\n    const [path, params] = (basePath + href).split('?');\n    const queryParams = params\n      ? params.split('&').reduce((qp, q) => {\n          const [key, value] = q.split('=');\n          const currentValue = qp[key];\n          if (typeof currentValue === 'undefined') {\n            qp[key] = value;\n          } else if (Array.isArray(currentValue)) {\n            qp[key] = [...currentValue, value];\n          } else {\n            qp[key] = [currentValue, value];\n          }\n          return qp;\n        }, {} as Record<string, string | string[]>)\n      : undefined;\n\n    const navigateOptions: NavigationExtras | undefined = queryParams\n      ? {\n          queryParams,\n        }\n      : undefined;\n\n    const doNavigate = () => {\n      return navigateOptions ? router?.navigate([path], navigateOptions) : router?.navigate([path]);\n    };\n\n    let result;\n\n    if (zone) {\n      await zone.run(() => (result = doNavigate()));\n    } else {\n      result = doNavigate();\n    }\n\n    detectChanges();\n    return result ?? false;\n  };\n\n  return {\n    // @ts-ignore: fixture assigned\n    fixture,\n    detectChanges: () => detectChanges(),\n    navigate,\n    rerender,\n    change,\n    // @ts-ignore: fixture assigned\n    debugElement: typeof sut === 'string' ? fixture.debugElement : fixture.debugElement.query(By.directive(sut)),\n    // @ts-ignore: fixture assigned\n    container: fixture.nativeElement,\n    debug: (element = fixture.nativeElement, maxLength, options) =>\n      Array.isArray(element)\n        ? element.forEach((e) => console.log(dtlPrettyDOM(e, maxLength, options)))\n        : console.log(dtlPrettyDOM(element, maxLength, options)),\n    // @ts-ignore: fixture assigned\n    ...replaceFindWithFindAndDetectChanges(dtlGetQueriesForElement(fixture.nativeElement, queries)),\n  };\n\n  async function renderFixture(properties: Partial<SutType>) {\n    if (fixture) {\n      cleanupAtFixture(fixture);\n    }\n\n    fixture = await createComponent(componentContainer);\n    setComponentProperties(fixture, { componentProperties: properties });\n\n    if (removeAngularAttributes) {\n      fixture.nativeElement.removeAttribute('ng-version');\n      const idAttribute = fixture.nativeElement.getAttribute('id');\n      if (idAttribute && idAttribute.startsWith('root')) {\n        fixture.nativeElement.removeAttribute('id');\n      }\n    }\n    mountedFixtures.add(fixture);\n\n    let isAlive = true;\n    fixture.componentRef.onDestroy(() => (isAlive = false));\n\n    if (hasOnChangesHook(fixture.componentInstance)) {\n      const changes = getChangesObj(null, componentProperties);\n      fixture.componentInstance.ngOnChanges(changes);\n    }\n\n    detectChanges = () => {\n      if (isAlive) {\n        fixture.detectChanges();\n      }\n    };\n\n    if (detectChangesOnRender) {\n      detectChanges();\n    }\n  }\n}\n\nasync function createComponent<SutType>(component: Type<SutType>): Promise<ComponentFixture<SutType>> {\n  /* Make sure angular application is initialized before creating component */\n  await inject(ApplicationInitStatus).donePromise;\n  return TestBed.createComponent(component);\n}\n\nfunction createComponentFixture<SutType, WrapperType>(\n  sut: Type<SutType> | string,\n  wrapper: Type<WrapperType>,\n): Type<any> {\n  if (typeof sut === 'string') {\n    TestBed.overrideTemplate(wrapper, sut);\n    return wrapper;\n  }\n  return sut;\n}\n\nfunction setComponentProperties<SutType>(\n  fixture: ComponentFixture<SutType>,\n  { componentProperties = {} }: Pick<RenderTemplateOptions<SutType, any>, 'componentProperties'>,\n) {\n  for (const key of Object.keys(componentProperties)) {\n    const descriptor = Object.getOwnPropertyDescriptor((fixture.componentInstance as any).constructor.prototype, key);\n    let _value = componentProperties[key];\n    const defaultGetter = () => _value;\n    const extendedSetter = (value: any) => {\n      _value = value;\n      descriptor?.set?.call(fixture.componentInstance, _value);\n      fixture.detectChanges();\n    };\n\n    Object.defineProperty(fixture.componentInstance, key, {\n      get: descriptor?.get || defaultGetter,\n      set: extendedSetter,\n      // Allow the property to be defined again later.\n      // This happens when the component properties are updated after initial render.\n      // For Jest this is `true` by default, for Karma and a real browser the default is `false`\n      configurable: true,\n    });\n\n    descriptor?.set?.call(fixture.componentInstance, _value);\n  }\n  return fixture;\n}\n\nfunction hasOnChangesHook<SutType>(componentInstance: SutType): componentInstance is SutType & OnChanges {\n  return (\n    'ngOnChanges' in componentInstance && typeof (componentInstance as SutType & OnChanges).ngOnChanges === 'function'\n  );\n}\n\nfunction getChangesObj<SutType extends Record<string, any>>(\n  oldProps: Partial<SutType> | null,\n  newProps: Partial<SutType>,\n) {\n  const isFirstChange = oldProps === null;\n  return Object.keys(newProps).reduce<SimpleChanges>(\n    (changes, key) => ({\n      ...changes,\n      [key]: new SimpleChange(isFirstChange ? null : oldProps[key], newProps[key], isFirstChange),\n    }),\n    {} as SutType,\n  );\n}\n\nfunction addAutoDeclarations<SutType>(\n  sut: Type<SutType> | string,\n  {\n    declarations = [],\n    excludeComponentDeclaration,\n    wrapper,\n  }: Pick<RenderTemplateOptions<any>, 'declarations' | 'excludeComponentDeclaration' | 'wrapper'>,\n) {\n  if (typeof sut === 'string') {\n    return [...declarations, wrapper];\n  }\n\n  const components = () => (excludeComponentDeclaration ? [] : [sut]);\n  return [...declarations, ...components()];\n}\n\nfunction addAutoImports({ imports = [], routes }: Pick<RenderComponentOptions<any>, 'imports' | 'routes'>) {\n  const animations = () => {\n    const animationIsDefined =\n      imports.indexOf(NoopAnimationsModule) > -1 || imports.indexOf(BrowserAnimationsModule) > -1;\n    return animationIsDefined ? [] : [NoopAnimationsModule];\n  };\n\n  const routing = () => (routes ? [RouterTestingModule.withRoutes(routes)] : []);\n\n  return [...imports, ...animations(), ...routing()];\n}\n\n/**\n * Wrap waitFor to invoke the Angular change detection cycle before invoking the callback\n */\nasync function waitForWrapper<T>(\n  detectChanges: () => void,\n  callback: () => T extends Promise<any> ? never : T,\n  options?: dtlWaitForOptions,\n): Promise<T> {\n  let inFakeAsync = true;\n  try {\n    tick(0);\n  } catch (err) {\n    inFakeAsync = false;\n  }\n\n  detectChanges();\n\n  return await dtlWaitFor(() => {\n    setTimeout(() => detectChanges(), 0);\n    if (inFakeAsync) {\n      tick(0);\n    }\n    return callback();\n  }, options);\n}\n\n/**\n * Wrap waitForElementToBeRemovedWrapper to poke the Angular change detection cycle before invoking the callback\n */\nasync function waitForElementToBeRemovedWrapper<T>(\n  detectChanges: () => void,\n  callback: (() => T) | T,\n  options?: dtlWaitForOptions,\n): Promise<void> {\n  let cb: () => T;\n  if (typeof callback !== 'function') {\n    const elements = (Array.isArray(callback) ? callback : [callback]) as Element[];\n    const getRemainingElements = elements.map((element) => {\n      let parent = element.parentElement as Element;\n      while (parent.parentElement) {\n        parent = parent.parentElement;\n      }\n      return () => (parent.contains(element) ? element : null);\n    });\n    cb = () => getRemainingElements.map((c) => c()).find(Boolean) as unknown as T;\n  } else {\n    cb = callback as () => T;\n  }\n\n  return await dtlWaitForElementToBeRemoved(() => {\n    const result = cb();\n    detectChanges();\n    return result;\n  }, options);\n}\n\nfunction cleanup() {\n  mountedFixtures.forEach(cleanupAtFixture);\n}\n\nfunction cleanupAtFixture(fixture: ComponentFixture<any>) {\n  fixture.destroy();\n\n  if (!fixture.nativeElement.getAttribute('ng-version') && fixture.nativeElement.parentNode === document.body) {\n    document.body.removeChild(fixture.nativeElement);\n  }\n  mountedFixtures.delete(fixture);\n}\n\n// if we're running in a test runner that supports afterEach\n// then we'll automatically run cleanup afterEach test\n// this ensures that tests run in isolation from each other\n// if you don't like this, set the ATL_SKIP_AUTO_CLEANUP env variable to 'true'\nif (typeof process === 'undefined' || !process.env?.ATL_SKIP_AUTO_CLEANUP) {\n  if (typeof afterEach === 'function') {\n    afterEach(() => {\n      cleanup();\n    });\n  }\n}\n\n@Component({ selector: 'atl-wrapper-component', template: '' })\nclass WrapperComponent {}\n\n/**\n * Wrap findBy queries to poke the Angular change detection cycle\n */\nfunction replaceFindWithFindAndDetectChanges<T extends Record<string, any>>(originalQueriesForContainer: T): T {\n  return Object.keys(originalQueriesForContainer).reduce((newQueries, key) => {\n    const getByQuery = originalQueriesForContainer[key.replace('find', 'get')];\n    if (key.startsWith('find') && getByQuery) {\n      newQueries[key] = async (...queryOptions: any[]) => {\n        const waitOptions = queryOptions.length === 3 ? queryOptions.pop() : undefined;\n        // original implementation at https://github.com/testing-library/dom-testing-library/blob/main/src/query-helpers.js\n        return await waitForWrapper(detectChangesForMountedFixtures, () => getByQuery(...queryOptions), waitOptions);\n      };\n    } else {\n      newQueries[key] = originalQueriesForContainer[key];\n    }\n\n    return newQueries;\n  }, {} as Record<string, any>) as T;\n}\n\n/**\n * Call detectChanges for all fixtures\n */\nfunction detectChangesForMountedFixtures() {\n  mountedFixtures.forEach((fixture) => {\n    try {\n      fixture.detectChanges();\n    } catch (err: any) {\n      if (!err.message.startsWith('ViewDestroyedError')) {\n        throw err;\n      }\n    }\n  });\n}\n\n/**\n * Re-export screen with patched queries\n */\nconst screen = replaceFindWithFindAndDetectChanges(dtlScreen);\n\n/**\n * Re-export within with patched queries\n */\nconst within = <QueriesToBind extends Queries = typeof dtlQueries, T extends QueriesToBind = QueriesToBind>(\n  element: HTMLElement,\n  queriesToBind?: T,\n): BoundFunctions<T> => {\n  const container = dtlWithin<T>(element, queriesToBind);\n  return replaceFindWithFindAndDetectChanges(container);\n};\n\n/**\n * Re-export waitFor with patched waitFor\n */\nasync function waitFor<T>(callback: () => T extends Promise<any> ? never : T, options?: dtlWaitForOptions): Promise<T> {\n  return waitForWrapper(detectChangesForMountedFixtures, callback, options);\n}\n\n/**\n * Re-export waitForElementToBeRemoved with patched waitForElementToBeRemoved\n */\nasync function waitForElementToBeRemoved<T>(callback: (() => T) | T, options?: dtlWaitForOptions): Promise<void> {\n  return waitForElementToBeRemovedWrapper(detectChangesForMountedFixtures, callback, options);\n}\n\n/**\n * Manually export otherwise we get the following error while running Jest tests\n * TypeError: Cannot set property fireEvent of [object Object] which has only a getter\n * exports.fireEvent = fireEvent\n */\nexport {\n  fireEvent,\n  buildQueries,\n  getByLabelText,\n  getAllByLabelText,\n  queryByLabelText,\n  queryAllByLabelText,\n  findByLabelText,\n  findAllByLabelText,\n  getByPlaceholderText,\n  getAllByPlaceholderText,\n  queryByPlaceholderText,\n  queryAllByPlaceholderText,\n  findByPlaceholderText,\n  findAllByPlaceholderText,\n  getByText,\n  getAllByText,\n  queryByText,\n  queryAllByText,\n  findByText,\n  findAllByText,\n  getByAltText,\n  getAllByAltText,\n  queryByAltText,\n  queryAllByAltText,\n  findByAltText,\n  findAllByAltText,\n  getByTitle,\n  getAllByTitle,\n  queryByTitle,\n  queryAllByTitle,\n  findByTitle,\n  findAllByTitle,\n  getByDisplayValue,\n  getAllByDisplayValue,\n  queryByDisplayValue,\n  queryAllByDisplayValue,\n  findByDisplayValue,\n  findAllByDisplayValue,\n  getByRole,\n  getAllByRole,\n  queryByRole,\n  queryAllByRole,\n  findByRole,\n  findAllByRole,\n  getByTestId,\n  getAllByTestId,\n  queryByTestId,\n  queryAllByTestId,\n  findByTestId,\n  findAllByTestId,\n  createEvent,\n  getDefaultNormalizer,\n  getElementError,\n  getNodeText,\n  getQueriesForElement,\n  getRoles,\n  isInaccessible,\n  logDOM,\n  logRoles,\n  prettyDOM,\n  queries,\n  queryAllByAttribute,\n  queryByAttribute,\n  queryHelpers,\n} from '@testing-library/dom';\n\n// export patched dtl\nexport { screen, waitFor, waitForElementToBeRemoved, within };\n","/*\n * Public API Surface of testing-library\n */\n\nexport * from './lib/models';\nexport * from './lib/config';\nexport * from './lib/testing-library';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["dtlConfigure","dtlPrettyDOM","dtlGetQueriesForElement","dtlWaitFor","dtlWaitForElementToBeRemoved","dtlScreen","dtlWithin"],"mappings":"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"}